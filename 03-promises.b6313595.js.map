{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,eACnCE,EAASH,SAASC,cAAc,iBAEhCG,GADYJ,SAASC,cAAc,kBAC5BD,SAASC,cAAc,UAIpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAGpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIcP,SAASC,cAAc,SAE5CG,EAAKU,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAQF,IANA,IAAMC,EAAcC,OAAOf,EAAOgB,OAE5BC,EAAkBF,OAAOnB,EAAWoB,OAEpCE,EAAiBH,OAAOhB,EAAUiB,OAE/BG,EAAI,EAAGA,EAAIL,EAAaK,IAAK,CAKpCjB,EAJiBiB,EAAI,EAEPF,EAAkBE,EAAID,GAGjCE,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=delay]');\nconst delayStep = document.querySelector('[name=step]');\nconst amount = document.querySelector('[name=amount]');\nconst createBtn = document.querySelector('.submit_button');\nconst form = document.querySelector('.form');\n\n// createBtn.addEventListener('click', createPromise)\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst formSubmitEl = document.querySelector('.form');\n\nform.addEventListener('submit', formSubmit);\n\nfunction formSubmit(e) {\n  e.preventDefault();\n\n  const amountValue = Number(amount.value);\n\n  const firstDelayValue = Number(firstDelay.value);\n\n  const delayStepValue = Number(delayStep.value);\n\n  for (let i = 0; i < amountValue; i++) {\n    const position = i + 1;\n\n    const delay = firstDelayValue + i * delayStepValue;\n\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amountValue","Number","value","firstDelayValue","delayStepValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b6313595.js.map"}